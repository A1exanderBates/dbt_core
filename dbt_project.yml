# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_core'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!

model-paths:
  - "0_playbooks"
  - "1_sources"
  - "3_models"
  - "4_exposures"
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["0_seeds"]
macro-paths: ["macros"]
snapshot-paths: ["2_snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# ==================
# Snowflake Configs
# ==================
quoting:
  database: false
  schema: false
  identifier: false



# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
    # ==================
    # dbt Model Configs
    # ==================
    dbt_core: 
        # Applies to all files under AB_Data_Core/model-paths           
        0_staging:
            +materialized: table
            +database: "{{ env_var('DBT_STAGING_DB','STAGING_DEV') }}"  
            # Uses environmental variables to determin what value to use. 
            +schema: GENERAL

        #1_edw:
            #+materialized: table
            #transient:  |
                   # {%- if  target.name == "prod" -%} false
                   # {%- else -%} true
                   # {%- endif -%} 
            #+database: "{{ env_var('DBT_DW_DB','EDW_DEV') }}"
            
            #integration:
                #+schema: INTEGRATION             
            #model:
                #+schema: MODEL 
            
        #2_presentation:
            #+materialized: view
            #+database: "{{ env_var('DBT_PRESENTATION_DB','PRESENTATION_DEV') }}"
            #+schema: PRIMARY 

snapshots:
    # ======================
    # dbt Snapshot Configs
    # ======================
    dbt_start: 
    # Applies to all files under dbt_start/snapshots/
        +target_database: "{{ env_var('DBT_STAGING_DB','STAGING_DEV') }}"
        #Typically put in staging as you want your snapshot as close to the source data as possible.
        examples:
            +target_schema: "{{ env_var('DBT_EXAMPLE_SCHEMA','DBT_EXAMPLES') }}"

seeds:
  dbt_core: 
    +database: "{{ env_var('DBT_STAGING_DB','STAGING_DEV') }}"
    +schema: DBT_SEEDS
    +full_refresh: true

